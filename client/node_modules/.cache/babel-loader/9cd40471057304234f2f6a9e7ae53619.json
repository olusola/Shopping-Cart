{"ast":null,"code":"import _regeneratorRuntime from \"/Users/akinolo/xxx/apps/mcart/client/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/akinolo/xxx/apps/mcart/client/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/akinolo/xxx/apps/mcart/client/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/akinolo/xxx/apps/mcart/client/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/akinolo/xxx/apps/mcart/client/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/akinolo/xxx/apps/mcart/client/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/akinolo/xxx/apps/mcart/client/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/akinolo/xxx/apps/mcart/client/src/components/Payment/Payment.jsx\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Button, Jumbotron } from 'reactstrap';\nimport { injectStripe } from 'react-stripe-elements';\nimport CardForm from './CardForm'; // import PaymentRequestForm from './PaymentRequestForm'\n\nvar Payment =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Payment, _Component);\n\n  function Payment() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Payment);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Payment)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      redirect: false,\n      processing: false\n    };\n\n    _this.handleToken =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(token) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                fetch(\"/charge\", {\n                  method: \"POST\",\n                  headers: {\n                    \"Content-Type\": \"application/json\"\n                  },\n                  body: JSON.stringify({\n                    token: token,\n                    amount: _this.props.subTotal * 100\n                  })\n                }).then(function (response) {\n                  if (!response.ok) throw response;\n                  return response.json();\n                }).then(function (output) {\n                  console.log(\"Purchase succeeded:\", output);\n\n                  _this.setState({\n                    redirect: true\n                  });\n                }).catch(function (err) {\n                  console.log(\"Purchase failed:\", err);\n                });\n\n              case 1:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.handleSubmit = function (ev) {\n      ev.preventDefault();\n\n      _this.setState({\n        processing: true\n      });\n\n      _this.props.stripe.createToken({\n        name: 'Jenny Rosen'\n      }).then(function (_ref2) {\n        var token = _ref2.token;\n\n        if (token) {\n          _this.handleToken(token);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Payment, [{\n    key: \"render\",\n    value: function render() {\n      if (this.state.redirect) {\n        return React.createElement(Redirect, {\n          to: \"/success\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        });\n      }\n\n      return this.props.subTotal !== 0 ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, this.state.processing ? React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Processing...\") : null, React.createElement(Jumbotron, {\n        className: \"p-2\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(CardForm, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }), React.createElement(Button, {\n        className: \"my-3\",\n        color: \"dark\",\n        block: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Pay Now\")))) : null;\n    }\n  }]);\n\n  return Payment;\n}(Component);\n\nexport default injectStripe(Payment);","map":{"version":3,"sources":["/Users/akinolo/xxx/apps/mcart/client/src/components/Payment/Payment.jsx"],"names":["React","Component","Redirect","Button","Jumbotron","injectStripe","CardForm","Payment","state","redirect","processing","handleToken","token","fetch","method","headers","body","JSON","stringify","amount","props","subTotal","then","response","ok","json","output","console","log","setState","catch","err","handleSubmit","ev","preventDefault","stripe","createToken","name"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Button, Jumbotron } from 'reactstrap'\nimport { injectStripe } from 'react-stripe-elements'\nimport CardForm from './CardForm'\n// import PaymentRequestForm from './PaymentRequestForm'\n\nclass Payment extends Component {\n\n  state = {\n    redirect: false,\n    processing: false\n  }\n\n  handleToken = async (token) => { \n    fetch(\"/charge\", {\n      method: \"POST\",\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify({token:token, amount: this.props.subTotal * 100})\n    })\n    .then(response => {\n      if (!response.ok)\n        throw response;\n      return response.json();\n    })\n    .then(output => {\n      console.log(\"Purchase succeeded:\", output)\n      this.setState({ redirect: true })\n\n    })\n    .catch(err => {\n      console.log(\"Purchase failed:\", err);\n    })\n  }\n\n  handleSubmit = (ev) => {\n    ev.preventDefault();\n    this.setState({processing: true})\n    this.props.stripe.createToken({name: 'Jenny Rosen'}).then(({token}) => {\n      if(token){\n        this.handleToken(token)\n      }\n    })\n  }\n  render () {\n\n    if(this.state.redirect){\n      return <Redirect to='/success'/>\n    }\n\n    return (this.props.subTotal !== 0) ?(\n      <div>\n        {\n          this.state.processing ? (<h5>Processing...</h5>) : null\n        }\n        <Jumbotron className=\"p-2\">\n        <form onSubmit={this.handleSubmit}>\n          <CardForm/>\n          <Button className=\"my-3\" color=\"dark\" block>Pay Now</Button>\n        </form>\n        </Jumbotron>\n        \n      </div>\n    ) : null\n  }\n}\n\nexport default injectStripe(Payment)"]},"metadata":{},"sourceType":"module"}