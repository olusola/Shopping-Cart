{"ast":null,"code":"var _jsxFileName = \"/Users/akinolo/xxx/apps/mcart/client/src/index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport { StripeProvider } from 'react-stripe-elements';\nimport App from './containers/App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './style/index.css';\nimport AWSAppSyncClient from 'aws-appsync';\nimport { Rehydrated } from 'aws-appsync-react';\nimport { AUTH_TYPE } from 'aws-appsync/lib/link/auth-link';\nimport { ApolloProvider } from 'react-apollo';\nimport registerServiceWorker from './registerServiceWorker';\nimport masterReducer from '../src/redux/reducers/master';\nvar store = createStore(masterReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\nvar client = new AWSAppSyncClient({\n  url: process.env.REACT_APP_GRAPHQL_ENDPOINT,\n  region: process.env.REACT_APP_GRAPHQL_REGION,\n  auth: {\n    type: AUTH_TYPE.API_KEY,\n    apiKey: process.env.REACT_APP_APPSYNC_APIKEY\n  }\n});\n\nvar WithProvider = function WithProvider() {\n  return React.createElement(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Rehydrated, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Provider, {\n    store: store,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(BrowserRouter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(StripeProvider, {\n    apiKey: process.env.REACT_APP_KEY_PUBLISHABLE,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }))))));\n};\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render(React.createElement(WithProvider, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42\n  },\n  __self: this\n}), rootElement);\nregisterServiceWorker();","map":{"version":3,"sources":["/Users/akinolo/xxx/apps/mcart/client/src/index.js"],"names":["React","ReactDOM","BrowserRouter","createStore","Provider","StripeProvider","App","AWSAppSyncClient","Rehydrated","AUTH_TYPE","ApolloProvider","registerServiceWorker","masterReducer","store","window","__REDUX_DEVTOOLS_EXTENSION__","client","url","process","env","REACT_APP_GRAPHQL_ENDPOINT","region","REACT_APP_GRAPHQL_REGION","auth","type","API_KEY","apiKey","REACT_APP_APPSYNC_APIKEY","WithProvider","REACT_APP_KEY_PUBLISHABLE","rootElement","document","getElementById","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,cAAT,QAA+B,uBAA/B;AACA,OAAOC,GAAP,MAAgB,kBAAhB;AACA,OAAO,sCAAP;AACA,OAAO,mBAAP;AACA,OAAOC,gBAAP,MAA6B,aAA7B;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,qBAAP,MAAkC,yBAAlC;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,IAAMC,KAAK,GAAGV,WAAW,CAACS,aAAD,EAAgBE,MAAM,CAACC,4BAAP,IAAuCD,MAAM,CAACC,4BAAP,EAAvD,CAAzB;AAEA,IAAMC,MAAM,GAAG,IAAIT,gBAAJ,CAAqB;AAClCU,EAAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,0BADiB;AAElCC,EAAAA,MAAM,EAAEH,OAAO,CAACC,GAAR,CAAYG,wBAFc;AAGlCC,EAAAA,IAAI,EAAE;AACJC,IAAAA,IAAI,EAAEf,SAAS,CAACgB,OADZ;AAEJC,IAAAA,MAAM,EAAER,OAAO,CAACC,GAAR,CAAYQ;AAFhB;AAH4B,CAArB,CAAf;;AASA,IAAMC,YAAY,GAAG,SAAfA,YAAe;AAAA,SACnB,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEZ,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AAAU,IAAA,KAAK,EAAEH,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD;AAAgB,IAAA,MAAM,EAAEK,OAAO,CAACC,GAAR,CAAYU,yBAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF,CADF,CADmB;AAAA,CAArB;;AAcA,IAAMC,WAAW,GAAGC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAApB;AACA/B,QAAQ,CAACgC,MAAT,CAAgB,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EAAkCH,WAAlC;AACAnB,qBAAqB","sourcesContent":["import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport { createStore } from 'redux'\nimport { Provider } from 'react-redux'\nimport { StripeProvider } from 'react-stripe-elements'\nimport App from './containers/App'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport './style/index.css'\nimport AWSAppSyncClient from 'aws-appsync'\nimport { Rehydrated } from 'aws-appsync-react'\nimport { AUTH_TYPE } from 'aws-appsync/lib/link/auth-link'\nimport { ApolloProvider } from 'react-apollo'\nimport registerServiceWorker from './registerServiceWorker'\nimport masterReducer from '../src/redux/reducers/master'\nconst store = createStore(masterReducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\n\nconst client = new AWSAppSyncClient({\n  url: process.env.REACT_APP_GRAPHQL_ENDPOINT,\n  region: process.env.REACT_APP_GRAPHQL_REGION,\n  auth: {\n    type: AUTH_TYPE.API_KEY,\n    apiKey: process.env.REACT_APP_APPSYNC_APIKEY\n  }\n})\n\nconst WithProvider = () => (\n  <ApolloProvider client={client}>\n    <Rehydrated>\n      <Provider store={store}>\n        <BrowserRouter>\n          <StripeProvider apiKey={process.env.REACT_APP_KEY_PUBLISHABLE}>\n            <App />\n          </StripeProvider>\n        </BrowserRouter>\n      </Provider>\n    </Rehydrated>\n  </ApolloProvider>\n)\n\nconst rootElement = document.getElementById(\"root\")\nReactDOM.render(<WithProvider />, rootElement)\nregisterServiceWorker()\n"]},"metadata":{},"sourceType":"module"}